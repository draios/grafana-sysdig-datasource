//
//  Copyright 2018 Draios Inc.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
pipeline {
    agent {
        dockerfile {
            dir 'build'
            label 'builder-backend-j8'
        }
    }

    environment {
        VERSION = readFile "VERSION"
        SLACK_URL = credentials('grafana-ds-build-slack-webhook')
    }

    options {
        disableConcurrentBuilds()
    }

    stages {
        stage('Prepare build') {
            steps {
                // At this point, Jenkins checked out the repository already.
                // Also, the workspace is persistent.
                // Since the previous build might have left some artifacts then now we're going to
                // remove everything and checkout the repository again
                sh "rm -rf *"

                // NOTE: 'checkout scm' is equivalent to
                // git url: "https://github.com/draios/grafana-sysdig-datasource", branch: "${env.BRANCH_NAME}", credentialsId: "github-jenkins-user-token"
                checkout scm

                // Prepare npm/yarn environment
                sh "npm install"
                sh "./node_modules/.bin/yarn install"
            }
        }

        stage('Build') {
            steps {
                sh "npm run build"
            }
        }

        stage('Deploy') {
            steps {
                sh "./build/upload-s3.sh ${VERSION} ${env.BUILD_ID} ${env.BRANCH_NAME}"
            }
        }

        stage('Tag') {
            when {
                branch 'master'
            }
            steps {
                echo "Tagging repository v${VERSION}"

                withCredentials([usernamePassword(credentialsId: "github-jenkins-user-token", passwordVariable: "GIT_PASSWORD", usernameVariable: "GIT_USERNAME")]) {
                    sh("git tag -a v${VERSION}")
                    sh("git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/draios/grafana-sysdig-datasource --tags")
                }
            }
        }
    }

    post {
        always {
            script {
                GIT_COMMIT_HASH = sh(script: "git log -n 1 --pretty=format:'%H'", returnStdout: true)
                if (currentBuild.previousBuild) {
                    PREVIOUS_BUILD_RESULT = "${currentBuild.previousBuild.currentResult}"
                } else {
                    PREVIOUS_BUILD_RESULT = "NONE"
                }
            }
            sh "node build/notify-slack.js ${SLACK_URL} ${VERSION} ${env.BUILD_NUMBER} ${env.BRANCH_NAME} ${env.BUILD_URL} ${PREVIOUS_BUILD_RESULT} ${currentBuild.currentResult} ${currentBuild.timeInMillis} ${currentBuild.duration} ${GIT_COMMIT_HASH}"
        }
    }
}