//
//  Copyright 2018 Draios Inc.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
pipeline {
    agent {
        label 'general_terminating_j8'
    }

    options {
        disableConcurrentBuilds()
    }

    environment {
        BUILDER = "sysdiglabs/grafana-sysdig-datasource-builder:0.1"
        VERSION = readFile "VERSION"
    }

    stages {
        stage('Prepare') {
            steps {
                // At this point, Jenkins checked out the repository already.
                // Also, the workspace is persistent.
                // Since the previous build might have left some artifacts then now we're going to
                // remove everything and checkout the repository again
                step([$class: 'WsCleanup'])

                sh "docker rm grafana-sysdig-datasource-builder || echo \\\"Builder image not found\\\""

                // NOTE: 'checkout scm' is equivalent to
                // git url: "https://github.com/:account/:repository", branch: "${env.BRANCH_NAME}", credentialsId: ${env.MY_CREDENTAILS_NAME}"
                checkout scm

                // Define build number
                script {
                    def now = new Date()

                    env.VERSION_BUILD_NUMBER=now.format("yyyyMMdd.HHmmss", TimeZone.getTimeZone('UTC'))
                }
            }
        }

        stage('Build') {
            environment {
                CWD = sh(script: 'pwd', , returnStdout: true).trim()
            }
            steps {
                sh "docker run --name grafana-sysdig-datasource-builder -v ${CWD}:/usr/bin/grafana-sysdig-datasource -v /var/run/docker.sock:/var/run/docker.sock -e 'GIT_BRANCH=${env.BRANCH_NAME}' -e 'BUILD_NUMBER=${env.VERSION_BUILD_NUMBER}' ${env.BUILDER}"
            }
        }

        stage('Publish Docker image') {
            steps {
                withCredentials([usernamePassword(credentialsId: "docker-hub", passwordVariable: "DOCKER_PASSWORD", usernameVariable: "DOCKER_USERNAME")]) {
                    sh "docker login -u=${env.DOCKER_USERNAME} -p=${env.DOCKER_PASSWORD}"
                    sh "GIT_BRANCH=${env.BRANCH_NAME} BUILD_NUMBER=${env.VERSION_BUILD_NUMBER} ./build/publish.sh"
                }            
            }
        }

        stage('Tag') {
            when {
                branch 'master'
            }
            steps {
                echo "Tagging repository v${VERSION}"

                withCredentials([usernamePassword(credentialsId: "github-jenkins-user-token", passwordVariable: "GIT_PASSWORD", usernameVariable: "GIT_USERNAME")]) {
                    sh("git tag -a v${VERSION} -m 'Release v${VERSION}'")
                    sh("git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/draios/grafana-sysdig-datasource --tags")
                }
            }
        }
    }
}
